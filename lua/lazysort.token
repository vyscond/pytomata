
reserved_word:function
identifier:quicksorter
open_parenthese:(
identifier:i
comma:,
identifier:vec
comma:,
identifier:low
comma:,
identifier:high
close_parenthese:)
reserved_word:if
identifier:low
relational_operator:>=
identifier:high
reserved_word:then
eol
reserved_word:return
identifier:quicksorter
eol
reserved_word:else
string:--
identifier:low
relational_operator:<
identifier:high
eol
string:--
identifier:partition
identifier:the
identifier:vector
reserved_word:and
identifier:initialize
identifier:the
identifier:child
identifier:closures
eol
reserved_word:local
identifier:middle
allocation_operator:=
identifier:partition
open_parenthese:(
identifier:vec
comma:,
identifier:low
comma:,
identifier:high
close_parenthese:)
reserved_word:local
identifier:left
comma:,
identifier:right
allocation_operator:=
identifier:quicksorter
eol
string:--
identifier:Create
identifier:the
identifier:promise
eol
reserved_word:local
reserved_word:function
identifier:self
open_parenthese:(
identifier:i
comma:,
identifier:vec
comma:,
identifier:low
comma:,
identifier:high
close_parenthese:)
reserved_word:if
identifier:i
relational_operator:<
identifier:middle
reserved_word:then
eol
identifier:left
allocation_operator:=
identifier:left
open_parenthese:(
identifier:i
comma:,
identifier:vec
comma:,
identifier:low
comma:,
string:middle-1
close_parenthese:)
reserved_word:return
identifier:self
eol
reserved_word:elseif
identifier:i
relational_operator:>
identifier:middle
reserved_word:then
eol
identifier:right
allocation_operator:=
identifier:right
open_parenthese:(
identifier:i
comma:,
identifier:vec
comma:,
string:middle+1
comma:,
identifier:high
close_parenthese:)
reserved_word:return
identifier:self
eol
reserved_word:end
eol
reserved_word:end
eol
string:--
identifier:Force
identifier:the
identifier:promise
reserved_word:until
identifier:i
identifier:is
reserved_word:in
identifier:the
identifier:right
identifier:position
eol
reserved_word:return
identifier:self
open_parenthese:(
identifier:i
comma:,
identifier:vec
comma:,
identifier:low
comma:,
identifier:high
close_parenthese:)
reserved_word:end
eol
reserved_word:end
eol
reserved_word:function
identifier:lazysort
open_parenthese:(
identifier:vec
comma:,
identifier:low
comma:,
identifier:high
close_parenthese:)
reserved_word:local
identifier:sorter
allocation_operator:=
identifier:quicksorter
eol
reserved_word:return
reserved_word:function
open_parenthese:(
identifier:i
close_parenthese:)
identifier:sorter
allocation_operator:=
identifier:sorter
open_parenthese:(
identifier:i
comma:,
identifier:vec
comma:,
identifier:low
comma:,
identifier:high
close_parenthese:)
reserved_word:return
identifier:vec
open_bracket:[
identifier:i
close_bracket:]
reserved_word:end
eol
eof